/*---------------------------PROCEDIMIENTOS ALMACENADOS PARA LOGICA DE NEGOCIO----------------------------------------*/
USE `PROYECTO_DAUTE`;
DROP procedure IF EXISTS `SP_INSERT_CARRITO`;
DELIMITER $$
USE `PROYECTO_DAUTE`$$
CREATE PROCEDURE `SP_INSERT_CARRITO` (
    IN S_ID_PRODUCTO INT,
    IN S_ID_USUARIO INT,
    IN S_SUS INT
)
BEGIN
	DECLARE TOT DOUBLE;
    DECLARE TOTAL DOUBLE;
	SELECT @CANT :=STOK FROM PRODUCTOS WHERE ID = S_ID_PRODUCTO;
	SELECT @VECES :=VECES_VENDIDO FROM PRODUCTOS WHERE ID = S_ID_PRODUCTO;
	SELECT @PRICE :=PRECIO FROM PRODUCTOS WHERE ID = S_ID_PRODUCTO;
	SET @TOT := (SELECT (PRECIO*0.10) FROM PRODUCTOS WHERE ID = 1);
	/*SET @TOTAL := @PRICE-@TOT;        NO SE USA---------- DESCUENTO INCLUIDO EN ESTA VARIABLE*/
	IF S_SUS = 2 THEN
		INSERT INTO carrito_de_compras VALUES (NULL,S_ID_PRODUCTO,S_ID_USUARIO,@PRICE,@TOT,0);
		UPDATE PRODUCTOS SET STOK = (@CANT-1) WHERE ID = S_ID_PRODUCTO;
    ELSE
		INSERT INTO carrito_de_compras VALUES (NULL,S_ID_PRODUCTO,S_ID_USUARIO,@PRICE,0,0);
		UPDATE PRODUCTOS SET STOK = (@CANT-1) WHERE ID = S_ID_PRODUCTO;
    END IF;
		UPDATE PRODUCTOS SET VECES_VENDIDO = (@VECES+1) WHERE ID = S_ID_PRODUCTO;
END$$
DELIMITER ;

USE `PROYECTO_DAUTE`;
DROP procedure IF EXISTS `SP_DELETE_CARRITO`;
DELIMITER $$
USE `PROYECTO_DAUTE`$$
CREATE PROCEDURE `SP_DELETE_CARRITO` (
    IN S_ID INT
)
BEGIN
    SELECT @IDPRO := ID_PRODUCTO FROM CARRITO_DE_COMPRAS WHERE ID=S_ID;
	SELECT @CANT := STOK FROM PRODUCTOS WHERE ID = @IDPRO;
	SELECT @VECES := VECES_VENDIDO FROM PRODUCTOS WHERE ID = @IDPRO;
    UPDATE PRODUCTOS SET STOK = (@CANT+1) WHERE ID = @IDPRO;
	UPDATE PRODUCTOS SET VECES_VENDIDO = (@VECES-1) WHERE ID = @IDPRO;
    DELETE FROM CARRITO_DE_COMPRAS WHERE ID = S_ID;
END$$
DELIMITER ;

USE `PROYECTO_DAUTE`;
DROP procedure IF EXISTS `SP_ORDENES`;
DELIMITER $$
USE `PROYECTO_DAUTE`$$
CREATE PROCEDURE `SP_ORDENES` (
    IN S_ID_USUARIO INT,
    IN S_ID_METODO_PAGO INT
)
BEGIN
	DECLARE TOT DOUBLE;
	SELECT @DIRECCION := ID FROM DIRECCION WHERE USUARIO_ID = S_ID_USUARIO;
    SELECT @PRE := SUM(PRECIO) FROM CARRITO_DE_COMPRAS WHERE ID_USUARIO = S_ID_USUARIO AND ESTADO_VENTA = 0;
	SELECT @DES:= SUM(DESCUENTO) FROM CARRITO_DE_COMPRAS WHERE ID_USUARIO = S_ID_USUARIO AND ESTADO_VENTA = 0;
	SET @TOT := @PRE - @DES;
    SELECT @SUBTOTAL := SUM(PRECIO) FROM CARRITO_DE_COMPRAS WHERE ID_USUARIO = S_ID_USUARIO;
	INSERT INTO ORDENES VALUES (NULL,S_ID_USUARIO,@DIRECCION,S_ID_METODO_PAGO,CURDATE(),@TOT,@TOT*1.13);
    
END$$
DELIMITER ;

USE `PROYECTO_DAUTE`;
DROP procedure IF EXISTS `SP_DETALLES`;
DELIMITER $$
USE `PROYECTO_DAUTE`$$
CREATE PROCEDURE `SP_DETALLES` (
	IN U INT
)
BEGIN
	SELECT @ID := MAX(ID) FROM ORDENES WHERE ID_USUARIO = U;
    INSERT INTO DETALLE_COMPRA (ID_ORDEN,ID_PRODUCTO,DESCUENTO,PRECIO)
    SELECT @ID,ID_PRODUCTO,DESCUENTO,PRECIO FROM CARRITO_DE_COMPRAS WHERE ID_USUARIO = U AND ESTADO_VENTA = 0;
    UPDATE CARRITO_DE_COMPRAS SET ESTADO_VENTA = 1 WHERE ID_USUARIO = U;
END$$
DELIMITER ;

